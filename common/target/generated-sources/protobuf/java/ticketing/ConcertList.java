// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ticketing.proto

// Protobuf Java Version: 3.25.3
package ticketing;

/**
 * Protobuf type {@code ticketing.ConcertList}
 */
public final class ConcertList extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:ticketing.ConcertList)
    ConcertListOrBuilder {
private static final long serialVersionUID = 0L;
  // Use ConcertList.newBuilder() to construct.
  private ConcertList(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private ConcertList() {
    concerts_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new ConcertList();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return ticketing.Ticketing.internal_static_ticketing_ConcertList_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return ticketing.Ticketing.internal_static_ticketing_ConcertList_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            ticketing.ConcertList.class, ticketing.ConcertList.Builder.class);
  }

  public static final int CONCERTS_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private java.util.List<ticketing.Concert> concerts_;
  /**
   * <code>repeated .ticketing.Concert concerts = 1;</code>
   */
  @java.lang.Override
  public java.util.List<ticketing.Concert> getConcertsList() {
    return concerts_;
  }
  /**
   * <code>repeated .ticketing.Concert concerts = 1;</code>
   */
  @java.lang.Override
  public java.util.List<? extends ticketing.ConcertOrBuilder> 
      getConcertsOrBuilderList() {
    return concerts_;
  }
  /**
   * <code>repeated .ticketing.Concert concerts = 1;</code>
   */
  @java.lang.Override
  public int getConcertsCount() {
    return concerts_.size();
  }
  /**
   * <code>repeated .ticketing.Concert concerts = 1;</code>
   */
  @java.lang.Override
  public ticketing.Concert getConcerts(int index) {
    return concerts_.get(index);
  }
  /**
   * <code>repeated .ticketing.Concert concerts = 1;</code>
   */
  @java.lang.Override
  public ticketing.ConcertOrBuilder getConcertsOrBuilder(
      int index) {
    return concerts_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < concerts_.size(); i++) {
      output.writeMessage(1, concerts_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < concerts_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, concerts_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof ticketing.ConcertList)) {
      return super.equals(obj);
    }
    ticketing.ConcertList other = (ticketing.ConcertList) obj;

    if (!getConcertsList()
        .equals(other.getConcertsList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getConcertsCount() > 0) {
      hash = (37 * hash) + CONCERTS_FIELD_NUMBER;
      hash = (53 * hash) + getConcertsList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static ticketing.ConcertList parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static ticketing.ConcertList parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static ticketing.ConcertList parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static ticketing.ConcertList parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static ticketing.ConcertList parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static ticketing.ConcertList parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static ticketing.ConcertList parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static ticketing.ConcertList parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static ticketing.ConcertList parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static ticketing.ConcertList parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static ticketing.ConcertList parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static ticketing.ConcertList parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(ticketing.ConcertList prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code ticketing.ConcertList}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:ticketing.ConcertList)
      ticketing.ConcertListOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ticketing.Ticketing.internal_static_ticketing_ConcertList_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ticketing.Ticketing.internal_static_ticketing_ConcertList_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ticketing.ConcertList.class, ticketing.ConcertList.Builder.class);
    }

    // Construct using ticketing.ConcertList.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      if (concertsBuilder_ == null) {
        concerts_ = java.util.Collections.emptyList();
      } else {
        concerts_ = null;
        concertsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000001);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return ticketing.Ticketing.internal_static_ticketing_ConcertList_descriptor;
    }

    @java.lang.Override
    public ticketing.ConcertList getDefaultInstanceForType() {
      return ticketing.ConcertList.getDefaultInstance();
    }

    @java.lang.Override
    public ticketing.ConcertList build() {
      ticketing.ConcertList result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public ticketing.ConcertList buildPartial() {
      ticketing.ConcertList result = new ticketing.ConcertList(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(ticketing.ConcertList result) {
      if (concertsBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          concerts_ = java.util.Collections.unmodifiableList(concerts_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.concerts_ = concerts_;
      } else {
        result.concerts_ = concertsBuilder_.build();
      }
    }

    private void buildPartial0(ticketing.ConcertList result) {
      int from_bitField0_ = bitField0_;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof ticketing.ConcertList) {
        return mergeFrom((ticketing.ConcertList)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(ticketing.ConcertList other) {
      if (other == ticketing.ConcertList.getDefaultInstance()) return this;
      if (concertsBuilder_ == null) {
        if (!other.concerts_.isEmpty()) {
          if (concerts_.isEmpty()) {
            concerts_ = other.concerts_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureConcertsIsMutable();
            concerts_.addAll(other.concerts_);
          }
          onChanged();
        }
      } else {
        if (!other.concerts_.isEmpty()) {
          if (concertsBuilder_.isEmpty()) {
            concertsBuilder_.dispose();
            concertsBuilder_ = null;
            concerts_ = other.concerts_;
            bitField0_ = (bitField0_ & ~0x00000001);
            concertsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getConcertsFieldBuilder() : null;
          } else {
            concertsBuilder_.addAllMessages(other.concerts_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              ticketing.Concert m =
                  input.readMessage(
                      ticketing.Concert.parser(),
                      extensionRegistry);
              if (concertsBuilder_ == null) {
                ensureConcertsIsMutable();
                concerts_.add(m);
              } else {
                concertsBuilder_.addMessage(m);
              }
              break;
            } // case 10
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.util.List<ticketing.Concert> concerts_ =
      java.util.Collections.emptyList();
    private void ensureConcertsIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        concerts_ = new java.util.ArrayList<ticketing.Concert>(concerts_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        ticketing.Concert, ticketing.Concert.Builder, ticketing.ConcertOrBuilder> concertsBuilder_;

    /**
     * <code>repeated .ticketing.Concert concerts = 1;</code>
     */
    public java.util.List<ticketing.Concert> getConcertsList() {
      if (concertsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(concerts_);
      } else {
        return concertsBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .ticketing.Concert concerts = 1;</code>
     */
    public int getConcertsCount() {
      if (concertsBuilder_ == null) {
        return concerts_.size();
      } else {
        return concertsBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .ticketing.Concert concerts = 1;</code>
     */
    public ticketing.Concert getConcerts(int index) {
      if (concertsBuilder_ == null) {
        return concerts_.get(index);
      } else {
        return concertsBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .ticketing.Concert concerts = 1;</code>
     */
    public Builder setConcerts(
        int index, ticketing.Concert value) {
      if (concertsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureConcertsIsMutable();
        concerts_.set(index, value);
        onChanged();
      } else {
        concertsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .ticketing.Concert concerts = 1;</code>
     */
    public Builder setConcerts(
        int index, ticketing.Concert.Builder builderForValue) {
      if (concertsBuilder_ == null) {
        ensureConcertsIsMutable();
        concerts_.set(index, builderForValue.build());
        onChanged();
      } else {
        concertsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .ticketing.Concert concerts = 1;</code>
     */
    public Builder addConcerts(ticketing.Concert value) {
      if (concertsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureConcertsIsMutable();
        concerts_.add(value);
        onChanged();
      } else {
        concertsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .ticketing.Concert concerts = 1;</code>
     */
    public Builder addConcerts(
        int index, ticketing.Concert value) {
      if (concertsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureConcertsIsMutable();
        concerts_.add(index, value);
        onChanged();
      } else {
        concertsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .ticketing.Concert concerts = 1;</code>
     */
    public Builder addConcerts(
        ticketing.Concert.Builder builderForValue) {
      if (concertsBuilder_ == null) {
        ensureConcertsIsMutable();
        concerts_.add(builderForValue.build());
        onChanged();
      } else {
        concertsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .ticketing.Concert concerts = 1;</code>
     */
    public Builder addConcerts(
        int index, ticketing.Concert.Builder builderForValue) {
      if (concertsBuilder_ == null) {
        ensureConcertsIsMutable();
        concerts_.add(index, builderForValue.build());
        onChanged();
      } else {
        concertsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .ticketing.Concert concerts = 1;</code>
     */
    public Builder addAllConcerts(
        java.lang.Iterable<? extends ticketing.Concert> values) {
      if (concertsBuilder_ == null) {
        ensureConcertsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, concerts_);
        onChanged();
      } else {
        concertsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .ticketing.Concert concerts = 1;</code>
     */
    public Builder clearConcerts() {
      if (concertsBuilder_ == null) {
        concerts_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        concertsBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .ticketing.Concert concerts = 1;</code>
     */
    public Builder removeConcerts(int index) {
      if (concertsBuilder_ == null) {
        ensureConcertsIsMutable();
        concerts_.remove(index);
        onChanged();
      } else {
        concertsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .ticketing.Concert concerts = 1;</code>
     */
    public ticketing.Concert.Builder getConcertsBuilder(
        int index) {
      return getConcertsFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .ticketing.Concert concerts = 1;</code>
     */
    public ticketing.ConcertOrBuilder getConcertsOrBuilder(
        int index) {
      if (concertsBuilder_ == null) {
        return concerts_.get(index);  } else {
        return concertsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .ticketing.Concert concerts = 1;</code>
     */
    public java.util.List<? extends ticketing.ConcertOrBuilder> 
         getConcertsOrBuilderList() {
      if (concertsBuilder_ != null) {
        return concertsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(concerts_);
      }
    }
    /**
     * <code>repeated .ticketing.Concert concerts = 1;</code>
     */
    public ticketing.Concert.Builder addConcertsBuilder() {
      return getConcertsFieldBuilder().addBuilder(
          ticketing.Concert.getDefaultInstance());
    }
    /**
     * <code>repeated .ticketing.Concert concerts = 1;</code>
     */
    public ticketing.Concert.Builder addConcertsBuilder(
        int index) {
      return getConcertsFieldBuilder().addBuilder(
          index, ticketing.Concert.getDefaultInstance());
    }
    /**
     * <code>repeated .ticketing.Concert concerts = 1;</code>
     */
    public java.util.List<ticketing.Concert.Builder> 
         getConcertsBuilderList() {
      return getConcertsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        ticketing.Concert, ticketing.Concert.Builder, ticketing.ConcertOrBuilder> 
        getConcertsFieldBuilder() {
      if (concertsBuilder_ == null) {
        concertsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            ticketing.Concert, ticketing.Concert.Builder, ticketing.ConcertOrBuilder>(
                concerts_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        concerts_ = null;
      }
      return concertsBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:ticketing.ConcertList)
  }

  // @@protoc_insertion_point(class_scope:ticketing.ConcertList)
  private static final ticketing.ConcertList DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new ticketing.ConcertList();
  }

  public static ticketing.ConcertList getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ConcertList>
      PARSER = new com.google.protobuf.AbstractParser<ConcertList>() {
    @java.lang.Override
    public ConcertList parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<ConcertList> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ConcertList> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public ticketing.ConcertList getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

